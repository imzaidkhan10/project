pip install keras 
pip install tensorflow

from tensorflow.keras.layers import Dense
from tensorflow.keras.models import Sequential
from sklearn.model_selection import train_test_split
import pandas as pd

df=pd.read_csv("forestfires.csv",delimiter=',')

df.head()

## Spliting

X=df.iloc[:,:30]

X.columns

Y=df["size_category"]

X.dtypes

from sklearn.preprocessing import LabelEncoder
LE=LabelEncoder()
X["month"]=LE.fit_transform(X["month"])
X["month"]=pd.DataFrame(X["month"])

X["day"]=LE.fit_transform(X["day"])
X["day"]=pd.DataFrame(X["day"])

df["size_category"]=LE.fit_transform(df["size_category"])
Y=pd.DataFrame(df["size_category"])
Y

model=Sequential()

model.add(Dense(45,input_dim=30,activation="relu"))
model.add(Dense(1,activation="sigmoid"))

model.compile(loss="binary_crossentropy",optimizer="adam",metrics=["accuracy"])

history=model.fit(X,Y,validation_split=0.33,epochs=150,batch_size=10)

scores=model.evaluate(X,Y)

print("%s: %.2f%%"%(model.metrics_names[1],scores[1]*100))

#accuracy=98.65%

history.history.keys()

import matplotlib.pyplot as plt

plt.plot(history.history["accuracy"])
plt.plot(history.history["val_accuracy"])
plt.title("model accuracy")
plt.ylabel("accuracy")
plt.xlabel("epoch")
plt.legend(["train","test"],loc="upper left")
plt.show()
